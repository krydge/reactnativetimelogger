{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useEffect, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction AddClient(params) {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    clientName = _useState2[0],\n    setClientName = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    contactName = _useState4[0],\n    setContactName = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    contactPhone = _useState6[0],\n    setContactPhone = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    contactEmail = _useState8[0],\n    setContactEmail = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    contactLanguage = _useState10[0],\n    setContactLanguage = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    endTime = _useState12[0],\n    setEndTime = _useState12[1];\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    billPeriod = _useState14[0],\n    setBillPeriod = _useState14[1];\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setClientName,\n      name: \"clientName\",\n      value: clientName || \"\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setContactName,\n      name: \"contactName\",\n      value: contactName || \"\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setContactPhone,\n      name: \"contactPhone\",\n      value: contactPhone || \"\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setContactEmail,\n      name: \"contactEmail\",\n      value: contactEmail || \"\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setContactLanguage,\n      name: \"contactLanguage\",\n      value: contactLanguage || \"\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setEndTime,\n      name: \"endTime\",\n      value: endTime || \"\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: setBillPeriod,\n      name: \"billPeriod\",\n      value: billPeriod || \"\"\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return params.addClient();\n      },\n      title: \"Add Client Info\"\n    })]\n  });\n}\nexport default AddClient;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});","map":{"version":3,"names":["useEffect","useState","AddClient","params","clientName","setClientName","contactName","setContactName","contactPhone","setContactPhone","contactEmail","setContactEmail","contactLanguage","setContactLanguage","endTime","setEndTime","billPeriod","setBillPeriod","styles","input","addClient","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","height","margin","borderWidth","padding"],"sources":["C:/Users/krydg/source/repos/FreeLance/reactnativetimelogger/components/AddClient/AddClient.js"],"sourcesContent":["import { Button, StyleSheet, Text, View, TextInput } from 'react-native';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction AddClient(params) {\r\n    const [clientName, setClientName] = useState(\"\")\r\n    const [contactName, setContactName] = useState(\"\")\r\n    const [contactPhone, setContactPhone] = useState(\"\")\r\n    const [contactEmail, setContactEmail] = useState(\"\")\r\n    const [contactLanguage, setContactLanguage] = useState(\"\")\r\n    const [endTime, setEndTime] = useState(\"\")\r\n    const [billPeriod, setBillPeriod] = useState(\"\")\r\n    return (\r\n        <View>\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={setClientName}\r\n                name=\"clientName\"\r\n                value={clientName || \"\"}\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={setContactName}\r\n                name=\"contactName\"\r\n                value={contactName || \"\"}\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={setContactPhone}\r\n                name=\"contactPhone\"\r\n                value={contactPhone || \"\"}\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={setContactEmail}\r\n                name=\"contactEmail\"\r\n                value={contactEmail || \"\"}\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={setContactLanguage}\r\n                name=\"contactLanguage\"\r\n                value={contactLanguage || \"\"}\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={setEndTime}\r\n                name=\"endTime\"\r\n                value={endTime || \"\"}\r\n            />\r\n            <TextInput\r\n                style={styles.input}\r\n                onChangeText={setBillPeriod}\r\n                name=\"billPeriod\"\r\n                value={billPeriod || \"\"}\r\n            />\r\n            <Button onPress={()=>params.addClient()} title=\"Add Client Info\"></Button>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default AddClient;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#fff',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    input: {\r\n      height: 40,\r\n      margin: 12,\r\n      borderWidth: 1,\r\n      padding: 10,\r\n    },\r\n  });"],"mappings":";;;;;;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAE5C,SAASC,SAAS,CAACC,MAAM,EAAE;EACvB,gBAAoCF,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAzCG,UAAU;IAAEC,aAAa;EAChC,iBAAsCJ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA3CK,WAAW;IAAEC,cAAc;EAClC,iBAAwCN,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7CO,YAAY;IAAEC,eAAe;EACpC,iBAAwCR,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7CS,YAAY;IAAEC,eAAe;EACpC,iBAA8CV,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAnDW,eAAe;IAAEC,kBAAkB;EAC1C,kBAA8BZ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAnCa,OAAO;IAAEC,UAAU;EAC1B,kBAAoCd,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAzCe,UAAU;IAAEC,aAAa;EAChC,OACI,MAAC,IAAI;IAAA,WACD,KAAC,SAAS;MACN,KAAK,EAAEC,MAAM,CAACC,KAAM;MACpB,YAAY,EAAEd,aAAc;MAC5B,IAAI,EAAC,YAAY;MACjB,KAAK,EAAED,UAAU,IAAI;IAAG,EAC1B,EACF,KAAC,SAAS;MACN,KAAK,EAAEc,MAAM,CAACC,KAAM;MACpB,YAAY,EAAEZ,cAAe;MAC7B,IAAI,EAAC,aAAa;MAClB,KAAK,EAAED,WAAW,IAAI;IAAG,EAC3B,EACF,KAAC,SAAS;MACN,KAAK,EAAEY,MAAM,CAACC,KAAM;MACpB,YAAY,EAAEV,eAAgB;MAC9B,IAAI,EAAC,cAAc;MACnB,KAAK,EAAED,YAAY,IAAI;IAAG,EAC5B,EACF,KAAC,SAAS;MACN,KAAK,EAAEU,MAAM,CAACC,KAAM;MACpB,YAAY,EAAER,eAAgB;MAC9B,IAAI,EAAC,cAAc;MACnB,KAAK,EAAED,YAAY,IAAI;IAAG,EAC5B,EACF,KAAC,SAAS;MACN,KAAK,EAAEQ,MAAM,CAACC,KAAM;MACpB,YAAY,EAAEN,kBAAmB;MACjC,IAAI,EAAC,iBAAiB;MACtB,KAAK,EAAED,eAAe,IAAI;IAAG,EAC/B,EACF,KAAC,SAAS;MACN,KAAK,EAAEM,MAAM,CAACC,KAAM;MACpB,YAAY,EAAEJ,UAAW;MACzB,IAAI,EAAC,SAAS;MACd,KAAK,EAAED,OAAO,IAAI;IAAG,EACvB,EACF,KAAC,SAAS;MACN,KAAK,EAAEI,MAAM,CAACC,KAAM;MACpB,YAAY,EAAEF,aAAc;MAC5B,IAAI,EAAC,YAAY;MACjB,KAAK,EAAED,UAAU,IAAI;IAAG,EAC1B,EACF,KAAC,MAAM;MAAC,OAAO,EAAE;QAAA,OAAIb,MAAM,CAACiB,SAAS,EAAE;MAAA,CAAC;MAAC,KAAK,EAAC;IAAiB,EAAU;EAAA,EACvE;AAEf;AAEA,eAAelB,SAAS;AAExB,IAAMgB,MAAM,GAAGG,UAAU,CAACC,MAAM,CAAC;EAC7BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDR,KAAK,EAAE;IACLS,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,CAAC;IACdC,OAAO,EAAE;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}